/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientesdistribuidos;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import negociodistribuidos.Asignacion;

/**
 *
 * @author arand
 */
public class Asignaciones extends javax.swing.JFrame {

    final String host = "127.0.0.1";
    final int puerto = 5060;
    private ArrayList<Asignacion> asignaciones;
    private int id_alumno;
    private Asignacion revision = null;

    /**
     * Creates new form Asignaciones
     */
    public Asignaciones(int id_alumno) {
        asignaciones = new ArrayList<Asignacion>();
        this.id_alumno = id_alumno;
        this.getAsignaciones();
        this.setLocationRelativeTo(this);
        initComponents();
        this.fillTable();
    }

    private void getAlumno(int id) {
        DataInputStream in;
        DataOutputStream out;
        ObjectInputStream inObj;
        try {
            Socket sc = new Socket(host, puerto);
            in = new DataInputStream(sc.getInputStream());
            out = new DataOutputStream(sc.getOutputStream());
            inObj = new ObjectInputStream(sc.getInputStream());

            //Envia la opcion 1, que es buscar alumno por id
            out.write(1);
            boolean existe = in.readBoolean();
            if (existe) {

            } else {
                System.out.println("No hay alumno");
            }

        } catch (IOException ex) {
            Logger.getLogger(Asignaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getAsignaciones() {
        try {
            System.out.println("Iniciando conexion con logica");
            DataInputStream in;
            DataOutputStream out;
            ObjectInputStream inObj;
            
            System.out.println("Socket a logica");
            Socket sc = new Socket(host, puerto);
            in = new DataInputStream(sc.getInputStream());
            out = new DataOutputStream(sc.getOutputStream());
            inObj = new ObjectInputStream(sc.getInputStream());
            System.out.println("Enviando opcion");
            //Se envia la opcion
            out.writeInt(2);
            out.writeInt(this.id_alumno);
            int size = in.readInt();
            if (size != 0) {
                while (size > 0) {
                    Asignacion aux = (Asignacion) inObj.readObject();
                    asignaciones.add(aux);
                    size--;
                }
                System.out.println(asignaciones.size());
                for (Asignacion asignacione : asignaciones) {
                    System.out.println(asignacione.getNombre());
                }
            } else {
                System.out.println("NO HAY ASIGNACIONES");

            }

        } catch (IOException ex) {
            Logger.getLogger(Asignaciones.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Asignaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void fillTable(){
        DefaultTableModel model = (DefaultTableModel) tablaAsignaciones.getModel();
        Object rowData[] = new Object[5];
        for(int i=0;i<this.asignaciones.size();i++){
            rowData[0] = this.asignaciones.get(i).getNombre();
            rowData[1] = this.asignaciones.get(i).getCalificacion();
            if(this.asignaciones.get(i).isEstado()){
                rowData[3] = "Revisado";
            }else{
                rowData[3] = "Sin revisar";
            }
            if(this.asignaciones.get(i).isTipo()){
                rowData[2] = "Tarea";
            }else{
                rowData[2] = "Ejercicio";
            }
            rowData[4] = this.asignaciones.get(i).getCurso();
            model.addRow(rowData);
        }
    }
    
    public void actualizarTabla(){
        this.getAsignaciones();
        this.fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alumnoLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAsignaciones = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();
        btnRevisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        alumnoLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        alumnoLabel.setText("Alumno:");

        tablaAsignaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Calificacion", "Tipo", "Revisado", "Curso"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaAsignaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAsignacionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaAsignaciones);

        btnCancelar.setBackground(new java.awt.Color(153, 0, 51));
        btnCancelar.setForeground(new java.awt.Color(204, 0, 0));
        btnCancelar.setText("Volver");

        btnRevisar.setText("Revisar");
        btnRevisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRevisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(alumnoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRevisar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(alumnoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnRevisar))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaAsignacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAsignacionesMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tablaAsignaciones.getModel();
        int index = tablaAsignaciones.getSelectedRow();
        System.out.println(index);
        revision = this.asignaciones.get(index);
    }//GEN-LAST:event_tablaAsignacionesMouseClicked

    private void btnRevisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRevisarActionPerformed
        // TODO add your handling code here:
        if(revision != null){
            RevisarFrame rev = new RevisarFrame(revision,this);
            rev.setVisible(true);
        }
        
    }//GEN-LAST:event_btnRevisarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alumnoLabel;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRevisar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAsignaciones;
    // End of variables declaration//GEN-END:variables
}
